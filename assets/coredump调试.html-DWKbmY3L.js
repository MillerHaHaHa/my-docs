import{_ as n,o as a,c as e,e as s}from"./app-CmOngkEL.js";const t={},i=s(`<h1 id="core-dump-调试" tabindex="-1"><a class="header-anchor" href="#core-dump-调试"><span>core dump 调试</span></a></h1><h2 id="_1-kernel-配置" tabindex="-1"><a class="header-anchor" href="#_1-kernel-配置"><span>1. kernel 配置</span></a></h2><p>进入 menuconfig，以 xm72010200_tiny_defconfig 为例</p><p>搜索以下配置并打开</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>CONFIG_ELF_CORE
CONFIG_CRASH_DUMP
CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS
CONFIG_PROC_VMCORE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并确认以下配置已打开</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>CONFIG_COREDUMP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-设置-coredump-转存路径" tabindex="-1"><a class="header-anchor" href="#_2-设置-coredump-转存路径"><span>2. 设置 coredump 转存路径</span></a></h2><p>根据实际情况修改以下路径</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;/mnt/sdcard/core-%e-%p-%t&quot;</span> <span class="token operator">&gt;</span> /proc/sys/kernel/core_pattern
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-设置-coredump-大小" tabindex="-1"><a class="header-anchor" href="#_3-设置-coredump-大小"><span>3. 设置 coredump 大小</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-c</span> unlimited
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>核心太大的话，建议只保留部分数据</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-c</span> <span class="token number">1024</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-测试-coredump" tabindex="-1"><a class="header-anchor" href="#_4-测试-coredump"><span>4. 测试 coredump</span></a></h2><p>shell 触发</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">kill</span> <span class="token parameter variable">-s</span> SIGSEGV <span class="token variable">$$</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>程序触发</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> <span class="token operator">*</span>ptr <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Dereferencing a NULL pointer...\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>ptr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 尝试解引用空指针，将导致段错误</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-编译-gdb" tabindex="-1"><a class="header-anchor" href="#_5-编译-gdb"><span>5. 编译 gdb</span></a></h2><p>在 sdk 根目录 <code>make menuconfig</code></p><p>搜索 XMEDIA_GDB_SUPPORT 并打开</p><p>保存配置，<code>make build</code></p><p>编译完成后，找到 gdb 工具 out/xm72010200/rootfs/bin/gdb 并复制到板端</p><h2 id="_6-gdb-调试" tabindex="-1"><a class="header-anchor" href="#_6-gdb-调试"><span>6. gdb 调试</span></a></h2><p>百度一下</p>`,26),l=[i];function c(p,d){return a(),e("div",null,l)}const o=n(t,[["render",c],["__file","coredump调试.html.vue"]]),u=JSON.parse('{"path":"/work/goke/coredump%E8%B0%83%E8%AF%95.html","title":"core dump 调试","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. kernel 配置","slug":"_1-kernel-配置","link":"#_1-kernel-配置","children":[]},{"level":2,"title":"2. 设置 coredump 转存路径","slug":"_2-设置-coredump-转存路径","link":"#_2-设置-coredump-转存路径","children":[]},{"level":2,"title":"3. 设置 coredump 大小","slug":"_3-设置-coredump-大小","link":"#_3-设置-coredump-大小","children":[]},{"level":2,"title":"4. 测试 coredump","slug":"_4-测试-coredump","link":"#_4-测试-coredump","children":[]},{"level":2,"title":"5. 编译 gdb","slug":"_5-编译-gdb","link":"#_5-编译-gdb","children":[]},{"level":2,"title":"6. gdb 调试","slug":"_6-gdb-调试","link":"#_6-gdb-调试","children":[]}],"git":{"updatedTime":1715047642000,"contributors":[{"name":"huangmingle","email":"huangmingle@goke.com","commits":1}]},"filePathRelative":"work/goke/coredump调试.md"}');export{o as comp,u as data};
